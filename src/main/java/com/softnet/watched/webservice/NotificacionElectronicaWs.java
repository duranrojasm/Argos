
package com.softnet.watched.webservice;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "NotificacionElectronicaWs", targetNamespace = "http://notificacion.softnet.com")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface NotificacionElectronicaWs {


    /**
     * 
     * @param passAdmin
     * @param codNotificacion
     * @param usuarioAdmin
     * @return
     *     returns com.softnet.watched.webservice.ResultadoNotificacion
     */
    @WebMethod
    @WebResult(name = "consultaBean", targetNamespace = "")
    @RequestWrapper(localName = "consultaNotificacion", targetNamespace = "http://notificacion.softnet.com", className = "com.softnet.watched.webservice.ConsultaNotificacion")
    @ResponseWrapper(localName = "consultaNotificacionResponse", targetNamespace = "http://notificacion.softnet.com", className = "com.softnet.watched.webservice.ConsultaNotificacionResponse")
    public ResultadoNotificacion consultaNotificacion(
        @WebParam(name = "usuario_admin", targetNamespace = "")
        String usuarioAdmin,
        @WebParam(name = "pass_admin", targetNamespace = "")
        String passAdmin,
        @WebParam(name = "cod_notificacion", targetNamespace = "")
        int codNotificacion);

    /**
     * 
     * @param passAdmin
     * @param documentos
     * @param nombreProceso
     * @param minimoFirmantes
     * @param empresas
     * @param usuarios
     * @param unidadTiempo
     * @param comentario
     * @param usuarioAdmin
     * @param timeout
     * @return
     *     returns com.softnet.watched.webservice.Resultado
     */
    @WebMethod
    @WebResult(name = "resultadoBean", targetNamespace = "")
    @RequestWrapper(localName = "registroNotificacionDataENtry", targetNamespace = "http://notificacion.softnet.com", className = "com.softnet.watched.webservice.RegistroNotificacionDataENtry")
    @ResponseWrapper(localName = "registroNotificacionDataENtryResponse", targetNamespace = "http://notificacion.softnet.com", className = "com.softnet.watched.webservice.RegistroNotificacionDataENtryResponse")
    public Resultado registroNotificacionDataENtry(
        @WebParam(name = "usuario_admin", targetNamespace = "")
        String usuarioAdmin,
        @WebParam(name = "pass_admin", targetNamespace = "")
        String passAdmin,
        @WebParam(name = "empresas", targetNamespace = "")
        List<EmpresaBean> empresas,
        @WebParam(name = "usuarios", targetNamespace = "")
        List<UsuarioBean> usuarios,
        @WebParam(name = "documentos", targetNamespace = "")
        List<DocumentoBean> documentos,
        @WebParam(name = "nombre_proceso", targetNamespace = "")
        String nombreProceso,
        @WebParam(name = "minimo_firmantes", targetNamespace = "")
        int minimoFirmantes,
        @WebParam(name = "timeout", targetNamespace = "")
        int timeout,
        @WebParam(name = "unidad_tiempo", targetNamespace = "")
        int unidadTiempo,
        @WebParam(name = "comentario", targetNamespace = "")
        String comentario);

    /**
     * 
     * @param passAdmin
     * @param codNotificacion
     * @param tipoCierre
     * @param usuarioAdmin
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(name = "estado", targetNamespace = "")
    @RequestWrapper(localName = "finalizaNotificacion", targetNamespace = "http://notificacion.softnet.com", className = "com.softnet.watched.webservice.FinalizaNotificacion")
    @ResponseWrapper(localName = "finalizaNotificacionResponse", targetNamespace = "http://notificacion.softnet.com", className = "com.softnet.watched.webservice.FinalizaNotificacionResponse")
    public int finalizaNotificacion(
        @WebParam(name = "usuario_admin", targetNamespace = "")
        String usuarioAdmin,
        @WebParam(name = "pass_admin", targetNamespace = "")
        String passAdmin,
        @WebParam(name = "cod_notificacion", targetNamespace = "")
        int codNotificacion,
        @WebParam(name = "tipo_cierre", targetNamespace = "")
        int tipoCierre);

    /**
     * 
     * @param passAdmin
     * @param codUsuario
     * @param codNotificacion
     * @param codEmpresa
     * @param tipoUsuario
     * @param tipoControl
     * @param usuarioAdmin
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(name = "estado", targetNamespace = "")
    @RequestWrapper(localName = "generarCargo", targetNamespace = "http://notificacion.softnet.com", className = "com.softnet.watched.webservice.GenerarCargo")
    @ResponseWrapper(localName = "generarCargoResponse", targetNamespace = "http://notificacion.softnet.com", className = "com.softnet.watched.webservice.GenerarCargoResponse")
    public int generarCargo(
        @WebParam(name = "usuario_admin", targetNamespace = "")
        String usuarioAdmin,
        @WebParam(name = "pass_admin", targetNamespace = "")
        String passAdmin,
        @WebParam(name = "cod_notificacion", targetNamespace = "")
        int codNotificacion,
        @WebParam(name = "cod_empresa", targetNamespace = "")
        int codEmpresa,
        @WebParam(name = "cod_usuario", targetNamespace = "")
        int codUsuario,
        @WebParam(name = "tipo_usuario", targetNamespace = "")
        int tipoUsuario,
        @WebParam(name = "tipo_control", targetNamespace = "")
        int tipoControl);

    /**
     * 
     * @param passAdmin
     * @param codNotificacion
     * @param usuarioAdmin
     * @return
     *     returns java.util.List<com.softnet.watched.webservice.Documento>
     */
    @WebMethod
    @WebResult(name = "listaDoc", targetNamespace = "")
    @RequestWrapper(localName = "obtenerDocumentos", targetNamespace = "http://notificacion.softnet.com", className = "com.softnet.watched.webservice.ObtenerDocumentos")
    @ResponseWrapper(localName = "obtenerDocumentosResponse", targetNamespace = "http://notificacion.softnet.com", className = "com.softnet.watched.webservice.ObtenerDocumentosResponse")
    public List<Documento> obtenerDocumentos(
        @WebParam(name = "usuario_admin", targetNamespace = "")
        String usuarioAdmin,
        @WebParam(name = "pass_admin", targetNamespace = "")
        String passAdmin,
        @WebParam(name = "cod_notificacion", targetNamespace = "")
        int codNotificacion);

    /**
     * 
     * @param passAdmin
     * @param codNotificacion
     * @param firmaAutomatica
     * @param usuarioAdmin
     * @return
     *     returns com.softnet.watched.webservice.Resultado
     */
    @WebMethod
    @WebResult(name = "resultadoBean", targetNamespace = "")
    @RequestWrapper(localName = "finalizaAdministrador", targetNamespace = "http://notificacion.softnet.com", className = "com.softnet.watched.webservice.FinalizaAdministrador")
    @ResponseWrapper(localName = "finalizaAdministradorResponse", targetNamespace = "http://notificacion.softnet.com", className = "com.softnet.watched.webservice.FinalizaAdministradorResponse")
    public Resultado finalizaAdministrador(
        @WebParam(name = "usuario_admin", targetNamespace = "")
        String usuarioAdmin,
        @WebParam(name = "pass_admin", targetNamespace = "")
        String passAdmin,
        @WebParam(name = "cod_notificacion", targetNamespace = "")
        int codNotificacion,
        @WebParam(name = "firma_automatica", targetNamespace = "")
        boolean firmaAutomatica);

    /**
     * 
     * @param passAdmin
     * @param codUsuario
     * @param codNotificacion
     * @param codEmpresa
     * @param tipoUsuario
     * @param usuarioAdmin
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(name = "estado", targetNamespace = "")
    @RequestWrapper(localName = "firmaAutomatizada", targetNamespace = "http://notificacion.softnet.com", className = "com.softnet.watched.webservice.FirmaAutomatizada")
    @ResponseWrapper(localName = "firmaAutomatizadaResponse", targetNamespace = "http://notificacion.softnet.com", className = "com.softnet.watched.webservice.FirmaAutomatizadaResponse")
    public int firmaAutomatizada(
        @WebParam(name = "usuario_admin", targetNamespace = "")
        String usuarioAdmin,
        @WebParam(name = "pass_admin", targetNamespace = "")
        String passAdmin,
        @WebParam(name = "cod_notificacion", targetNamespace = "")
        int codNotificacion,
        @WebParam(name = "cod_empresa", targetNamespace = "")
        int codEmpresa,
        @WebParam(name = "cod_usuario", targetNamespace = "")
        int codUsuario,
        @WebParam(name = "tipo_usuario", targetNamespace = "")
        int tipoUsuario);

    /**
     * 
     * @param passAdmin
     * @param documentos
     * @param nombreProceso
     * @param minimoFirmantes
     * @param empresa
     * @param usuarios
     * @param unidadTiempo
     * @param comentario
     * @param usuarioAdmin
     * @param timeout
     * @return
     *     returns com.softnet.watched.webservice.Resultado
     */
    @WebMethod
    @WebResult(name = "resultadoBean", targetNamespace = "")
    @RequestWrapper(localName = "registroNotificacion", targetNamespace = "http://notificacion.softnet.com", className = "com.softnet.watched.webservice.RegistroNotificacion")
    @ResponseWrapper(localName = "registroNotificacionResponse", targetNamespace = "http://notificacion.softnet.com", className = "com.softnet.watched.webservice.RegistroNotificacionResponse")
    public Resultado registroNotificacion(
        @WebParam(name = "usuario_admin", targetNamespace = "")
        String usuarioAdmin,
        @WebParam(name = "pass_admin", targetNamespace = "")
        String passAdmin,
        @WebParam(name = "empresa", targetNamespace = "")
        EmpresaBean empresa,
        @WebParam(name = "usuarios", targetNamespace = "")
        List<UsuarioBean> usuarios,
        @WebParam(name = "documentos", targetNamespace = "")
        List<DocumentoBean> documentos,
        @WebParam(name = "nombre_proceso", targetNamespace = "")
        String nombreProceso,
        @WebParam(name = "minimo_firmantes", targetNamespace = "")
        int minimoFirmantes,
        @WebParam(name = "timeout", targetNamespace = "")
        int timeout,
        @WebParam(name = "unidad_tiempo", targetNamespace = "")
        int unidadTiempo,
        @WebParam(name = "comentario", targetNamespace = "")
        String comentario);

}
